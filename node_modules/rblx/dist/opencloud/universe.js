"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _Universe_apikey;
Object.defineProperty(exports, "__esModule", { value: true });
const fs = __importStar(require("fs"));
const datastore_1 = __importDefault(require("./datastore"));
const ordereddatastore_1 = __importDefault(require("./ordereddatastore"));
const Util = __importStar(require("../util"));
function modifyPlace(apikey, uid, pid, versionType, pathToFile) {
    return __awaiter(this, void 0, void 0, function* () {
        // File verification
        let exists = fs.existsSync(pathToFile);
        if (!exists) {
            console.error('File does not exist!');
        }
        let url = Util.URIs.PlaceManagement + Util.populateQuery({
            versionType: versionType
        });
        let res = yield Util.octokit(url, {
            universeId: uid,
            placeId: pid
        }, {
            method: 'POST',
            headers: {
                'x-api-key': apikey,
                'Content-Type': 'application/octet-stream'
            },
            body: fs.readFileSync(pathToFile)
        });
        if (res.status === 200) {
            return res.data;
        }
        else {
            console.error(res.status, res.statusText);
        }
    });
}
class Universe {
    constructor(id) {
        _Universe_apikey.set(this, void 0);
        this.id = id;
    }
    // @WONTFIX No method for retrieving the API Key
    authenticate(apikey) {
        __classPrivateFieldSet(this, _Universe_apikey, apikey, "f");
    }
    getDatastores(limit, prefix, cursor) {
        return __awaiter(this, void 0, void 0, function* () {
            /* (
                prefix ?
                `?prefix=${prefix.toString()}` :
                ''
            ) + (
                limit ?
                `?limit=${limit.toString()}` :
                ''
            ) + (
                cursor ?
                `?cursor=${cursor.toString()}` :
                ''
            ) */
            let url = Util.URIs.DataStore + `/${this.id}/standard-datastores` + Util.populateQuery({
                prefix: prefix,
                limit: limit,
                cursor: cursor
            });
            let res = yield Util.octokit(url, {}, {
                method: 'GET',
                headers: {
                    'x-api-key': __classPrivateFieldGet(this, _Universe_apikey, "f")
                }
            });
            if (res.status === 200) {
                let previousCursor = res.data.previousPageCursor;
                let nextCursor = res.data.nextPageCursor;
                let ds = res.data.datastores;
                let rt = {
                    datastores: [],
                    previousPageCursor: previousCursor,
                    nextPageCursor: nextCursor
                };
                ds.map((d) => {
                    let ds = new datastore_1.default(this.id, d.name);
                    ds.authenticate(__classPrivateFieldGet(this, _Universe_apikey, "f"));
                    rt.datastores.push(ds);
                });
                return rt;
            }
            else {
                console.error(res.status, res.statusText);
            }
        });
    }
    getOrderedDatastore(name, scope) {
        return __awaiter(this, void 0, void 0, function* () {
            let ds = new ordereddatastore_1.default(this.id, name, scope);
            ds.authenticate(__classPrivateFieldGet(this, _Universe_apikey, "f"));
            return ds;
        });
    }
    save(placeId, pathToFile) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield modifyPlace(__classPrivateFieldGet(this, _Universe_apikey, "f"), this.id, placeId, 'Saved', pathToFile);
        });
    }
    publish(placeId, pathToFile) {
        return __awaiter(this, void 0, void 0, function* () {
            return yield modifyPlace(__classPrivateFieldGet(this, _Universe_apikey, "f"), this.id, placeId, 'Published', pathToFile);
        });
    }
    publishToTopic(topic, data) {
        return __awaiter(this, void 0, void 0, function* () {
            let url = Util.URIs.MessagingService;
            let res = yield Util.octokit(url, {
                universeId: this.id,
                topic: topic
            }, {
                method: 'POST',
                headers: {
                    'x-api-key': __classPrivateFieldGet(this, _Universe_apikey, "f"),
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    message: JSON.stringify(data)
                })
            });
            if (res.status === 200) {
                return res.data;
            }
            else {
                console.error(res.status, res.statusText);
            }
        });
    }
}
_Universe_apikey = new WeakMap();
exports.default = Universe;

import * as Util from '../util';
declare class AssetManager {
    #private;
    id: number;
    isGroup: boolean;
    /**
     * Create a new AssetManager
     * @param {number} id UserId or GroupId of the AssetManager
     * @param {number} isGroup Whether this AssetManager is for a User or Group
     */
    private constructor();
    /**
     * Create a new AssetManager for a User
     * @param {number} userId UserId of the AssetManager
     */
    static User(userId: number): AssetManager;
    /**
     * Create a new AssetManager for a Group
     * @param {number} groupId GroupId of the AssetManager
     */
    static Group(groupId: number): AssetManager;
    authenticate(apikey: string): void;
    createAsset(assetType: Util.AssetType, filePath: string, name: string, desc?: string): Promise<Util.AssetOperation>;
    getOperation(id: string): Promise<Util.Asset>;
    updateAsset(assetId: number, filePath: string): Promise<Util.AssetOperation>;
}
export default AssetManager;

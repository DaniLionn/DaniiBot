"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TradeStatus = exports.PromotionChannelPrivacy = exports.OrderType = exports.Gender = exports.ErrLevel = exports.URIs = exports.AssetType = void 0;
var URIs;
(function (URIs) {
    URIs["Asset"] = "https://apis.roblox.com/assets/v1";
    URIs["DataStore"] = "https://apis.roblox.com/datastores/v1/universes";
    URIs["OrderedDataStore"] = "https://apis.roblox.com/ordered-data-stores/v1/universes";
    URIs["PlaceManagement"] = "https://apis.roblox.com/universes/v1/{universeId}/places/{placeId}/versions";
    URIs["MessagingService"] = "https://apis.roblox.com/messaging-service/v1/universes/{universeId}/topics/{topic}";
})(URIs || (URIs = {}));
exports.URIs = URIs;
var AssetType;
(function (AssetType) {
    AssetType["Audio"] = "Audio";
    AssetType["Decal"] = "Decal";
    AssetType["Model"] = "Model";
})(AssetType || (AssetType = {}));
exports.AssetType = AssetType;
var ErrLevel;
(function (ErrLevel) {
    ErrLevel[ErrLevel["None"] = 0] = "None";
    ErrLevel[ErrLevel["Info"] = 1] = "Info";
    ErrLevel[ErrLevel["Warning"] = 2] = "Warning";
    ErrLevel[ErrLevel["Error"] = 3] = "Error";
    ErrLevel[ErrLevel["Critical"] = 4] = "Critical";
})(ErrLevel || (ErrLevel = {}));
exports.ErrLevel = ErrLevel;
/**
 * @NOTICE Cannot figure out the "non-binary" gender string that the API will accept - if you find this, please make a PR to the repo and I will add it after testing
 */
var Gender;
(function (Gender) {
    Gender[Gender["Male"] = 0] = "Male";
    Gender[Gender["Female"] = 1] = "Female";
})(Gender || (Gender = {}));
exports.Gender = Gender;
var OrderType;
(function (OrderType) {
    OrderType[OrderType["Ascending"] = 0] = "Ascending";
    OrderType[OrderType["Descending"] = 1] = "Descending";
})(OrderType || (OrderType = {}));
exports.OrderType = OrderType;
var PromotionChannelPrivacy;
(function (PromotionChannelPrivacy) {
    PromotionChannelPrivacy["NoOne"] = "NoOne";
    PromotionChannelPrivacy["Friends"] = "Friends";
    PromotionChannelPrivacy["FriendsAndFollowing"] = "FriendsAndFollowing";
    PromotionChannelPrivacy["FriendsAndFollowingAndFollowers"] = "FriendsAndFollowingAndFollowers";
    PromotionChannelPrivacy["AllUsers"] = "AllUsers";
})(PromotionChannelPrivacy || (PromotionChannelPrivacy = {}));
exports.PromotionChannelPrivacy = PromotionChannelPrivacy;
var TradeStatus;
(function (TradeStatus) {
    TradeStatus["Completed"] = "Completed";
    TradeStatus["Inactive"] = "Inactive";
    TradeStatus["Inbound"] = "Inbound";
    TradeStatus["Outbound"] = "Outbound";
})(TradeStatus || (TradeStatus = {}));
exports.TradeStatus = TradeStatus;
